plugins {
	id 'org.springframework.boot' version '2.7.2'
	id 'io.spring.dependency-management' version '1.0.12.RELEASE'
	id 'jacoco'
	id 'java'
	id 'org.sonarqube' version '3.4.0.2513'
}

group = 'com.selina.lending'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
}

ext {
	set('springCloudVersion', "2021.0.3")
	set('springBootAdminVersion', "2.7.4")
}

sonarqube {
	properties {
		property "sonar.projectKey", "Selina-Finance_ms-lending-api"
		property "sonar.organization", "selina-finance"
		property "sonar.host.url", "https://sonarcloud.io"
		property "sonar.exclusions", "**/com/selina/lending/api/dto/**, **/com/selina/lending/httpclient/**/dto/**, **/com/selina/lending/config/**, **/com/selina/lending/messaging/event/**"
		property "sonar.coverage.jacoco.xmlReportPaths", "${project.buildDir}/reports/jacoco/test/jacocoTestReport.xml"
		property "sonar.coverage.exclusions", "**/com/selina/lending/api/dto/**, **/com/selina/lending/httpclient/**/dto/**, **/com/selina/lending/config/**, **/com/selina/lending/messaging/event/**"
	}
}

dependencies {
	// spring
	implementation 'org.springdoc:springdoc-openapi-ui:1.6.9'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework:spring-aspects:5.3.22'
	implementation 'org.springframework.cloud:spring-cloud-starter-circuitbreaker-resilience4j'
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
	implementation 'io.github.openfeign:feign-httpclient'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.cloud:spring-cloud-starter-sleuth'
	implementation 'org.springframework.cloud:spring-cloud-starter-kubernetes-fabric8'
	implementation 'org.springframework.cloud:spring-cloud-starter-kubernetes-fabric8-config'
	implementation 'de.codecentric:spring-boot-admin-starter-client'
	implementation 'org.springframework.cloud:spring-cloud-starter-vault-config'
	implementation 'org.springframework.kafka:spring-kafka'
	implementation 'io.sentry:sentry-spring-boot-starter:6.6.0'

	// other
	annotationProcessor "org.projectlombok:lombok:1.18.30"
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.1.Final'
	implementation "org.projectlombok:lombok:1.18.30"
	implementation 'ch.qos.logback:logback-core:1.2.11'
	implementation 'ch.qos.logback:logback-classic:1.2.11'
	implementation 'org.slf4j:slf4j-api:1.7.36'
	implementation 'io.sentry:sentry-logback:6.6.0'
	implementation 'org.zalando:problem-spring-web:0.27.0'
	implementation 'org.apache.commons:commons-lang3:3.12.0'
	implementation 'org.apache.commons:commons-math3:3.5'
	implementation 'org.mapstruct:mapstruct:1.5.1.Final'
	implementation 'commons-beanutils:commons-beanutils:1.9.4'
	implementation 'io.micrometer:micrometer-registry-prometheus:1.9.4'
	implementation 'com.googlecode.libphonenumber:libphonenumber:8.13.14'

	// test
	testImplementation 'org.hamcrest:hamcrest:2.2'
	testImplementation 'org.mockito:mockito-core:4.6.1'
	testImplementation 'org.junit.jupiter:junit-jupiter:5.8.1'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation 'org.springframework.kafka:spring-kafka-test:2.9.1'
	testImplementation 'org.awaitility:awaitility:4.2.0'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
		mavenBom "de.codecentric:spring-boot-admin-dependencies:${springBootAdminVersion}"
	}
}

test {
	useJUnitPlatform()
	finalizedBy jacocoTestReport
}

jacocoTestReport {
	dependsOn test
	afterEvaluate {
		classDirectories.from = (files(classDirectories.files.collect {
			fileTree(dir: it, excludes: [
					"**/com/selina/lending/api/dto/**",
					"**/com/selina/lending/httpclient/**/dto/**",
					"**/com/selina/lending/httpclient/**/exception/**",
					"**/com/selina/lending/config/**",
					"**/com/selina/lending/config/**",
					"**/com/selina/lending/messaging/event/**"
			])
		}))
	}
	reports {
		xml.required = true
		csv.required = false
		html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
	}
}